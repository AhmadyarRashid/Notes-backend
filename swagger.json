{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://localhost:3000/api/v1.0"
    }
  ],
  "info": {
    "description": "API documentation for Notes API",
    "version": "1.0.0",
    "title": "Notes API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "IAM",
      "description": "Everything about the Authentication"
    },
    {
      "name": "Notes",
      "description": "Everything about the Notes"
    }
  ],
  "paths": {
    "/user/sign-up": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Sign up new user",
        "description": "Sign up new user.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userLoginAndSignUp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signUpSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intervalServer"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Login user",
        "description": "Logs user into the system",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userLoginAndSignUp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intervalServer"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "userLoginAndSignUp": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "email": "ahmadyarmeo@gmail.com",
          "password": "12345678"
        }
      },
      "badRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicBadRequestModel"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Errors encountered while validating request parameters."
              },
              "data": {
                "type": "object"
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing field is required."
                    },
                    "code": {
                      "type": "integer",
                      "example": 1018
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "BasicBadRequestModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "integer",
            "format": "int64",
            "description": "Either 0 or 1",
            "example": 0
          },
          "response": {
            "type": "integer",
            "format": "int64",
            "description": "Response code",
            "example": 400
          }
        }
      },
      "intervalServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicInternalServerModel"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Something went wrong."
              },
              "data": {
                "type": "object"
              }
            }
          }
        ]
      },
      "BasicInternalServerModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "integer",
            "format": "int64",
            "description": "Either 0 or 1",
            "example": 0
          },
          "response": {
            "type": "integer",
            "format": "int64",
            "description": "Response code",
            "example": 500
          }
        }
      },
      "signUpSuccess": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicSuccessModel"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Resource created successfully."
              },
              "data": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "UUID",
                    "example": "033d7d26-f529-44dc-91c6-f9117245d96d"
                  }
                }
              }
            }
          }
        ]
      },
      "BasicSuccessModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "response": {
            "type": "integer",
            "format": "int64",
            "example": 200
          }
        }
      },
      "loginSuccess": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicSuccessModel"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "User logged in successfully."
              },
              "data": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "UUID",
                    "example": "033d7d26-f529-44dc-91c6-f9117245d96d"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
